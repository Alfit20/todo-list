<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kg.alfit.tasklist.repository.UserRepository">
    <resultMap id="UserResultMap" type="kg.alfit.tasklist.domain.user.User" autoMapping="false">
        <id property="id" column="user_id"/>
        <result property="name" column="name"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <collection property="roles" ofType="kg.alfit.tasklist.domain.user.Role" autoMapping="false">
            <result property="name" column="role"/>
        </collection>
        <collection property="tasks" ofType="kg.alfit.tasklist.domain.task.Task"
                    resultMap="kg.alfit.tasklist.repository.TaskRepository.TaskResultMap"
                    autoMapping="false"/>

    </resultMap>
    <select id="findById" resultMap="UserResultMap">
        SELECT u.id user_id, u.name name, u.username username,
        u.password password, ur.role role, t.id task_id, t.title title,
        t.description description, t.expiration_date expiration_date, t.status status
        FROM users u
        LEFT JOIN users_roles ur ON u.id = ur.user_id
        LEFT JOIN users_tasks ut ON u.id = ut.user_id
        LEFT JOIN tasks t ON ut.task_id = t.id
        WHERE u.id = #{id}
    </select>
    <select id="findByUsername" resultMap="UserResultMap">
        SELECT u.id user_id, u.name name, u.username username,
        u.password password, ur.role role, t.id task_id, t.title title,
        t.description description, t.expiration_date expiration_date, t.status status
        FROM users u
        LEFT JOIN users_roles ur ON u.id = ur.user_id
        LEFT JOIN users_tasks ut ON u.id = ut.user_id
        LEFT JOIN tasks t ON ut.task_id = t.id
        WHERE u.username = #{username}
    </select>
    <update id="update">
        UPDATE users
        SET name = #{name}, username = #{username}, password = #{password}
        WHERE id = #{id}
    </update>
    <insert id="create" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
        INSERT INTO users(name, username, password)
        VALUES (#{name}, #{username}, #{password})
    </insert>
    <insert id="insertUserRole">
        INSERT INTO users_roles (user_id, role)
        VALUES (#{userId}, #{role})
    </insert>
    <select id="isTaskOwner" resultType="boolean">
        SELECT EXISTS(
        SELECT 1
        FROM users_tasks
        WHERE user_id = #{userId}
        AND task_id = #{taskId}
        )
    </select>
    <delete id="delete">
        DELETE FROM users WHERE id = #{id}
    </delete>
</mapper>